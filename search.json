[{"path":"https://jmclawson.github.io/tmtyro/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 tmtyro authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jmclawson.github.io/tmtyro/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Clawson. Author, maintainer.","code":""},{"path":"https://jmclawson.github.io/tmtyro/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Clawson J (2024). tmtyro: tmtyro: Simplified Workflows Text Mining Tyros. R package version 0.0.0.9000, https://jmclawson.github.io/tmtyro/, https://github.com/jmclawson/tmtyro.","code":"@Manual{,   title = {tmtyro: tmtyro: Simplified Workflows for Text Mining Tyros},   author = {James Clawson},   year = {2024},   note = {R package version 0.0.0.9000, https://jmclawson.github.io/tmtyro/},   url = {https://github.com/jmclawson/tmtyro}, }"},{"path":"https://jmclawson.github.io/tmtyro/index.html","id":"tmtyro","dir":"","previous_headings":"","what":"tmtyro: Simplified Workflows for Text Mining Tyros","title":"tmtyro: Simplified Workflows for Text Mining Tyros","text":"goal tmtyro help beginners work analyze text simple complex features. Adopting tidytext principles, tmtyro abstracts processes levels allow tyros apply text mining techniques ’re deeply familiar R code.","code":""},{"path":"https://jmclawson.github.io/tmtyro/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"tmtyro: Simplified Workflows for Text Mining Tyros","text":"can install development version tmtyro GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"jmclawson/tmtyro\")"},{"path":"https://jmclawson.github.io/tmtyro/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"tmtyro: Simplified Workflows for Text Mining Tyros","text":"One first steps text mining workflow load corpus texts directory. , may desirable detect paragraph breaks prepare data frame one word per row. load_texts() function makes easy.","code":"library(tmtyro) mysteries <- load_texts(\"mycorpus\")"},{"path":"https://jmclawson.github.io/tmtyro/reference/download_once.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a file once — download_once","title":"Download a file once — download_once","text":"download_once() checks local copy file found online. copy exist, downloads copy local use.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/download_once.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a file once — download_once","text":"","code":"download_once(url, filename = NULL, destdir = \"data\")"},{"path":"https://jmclawson.github.io/tmtyro/reference/download_once.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a file once — download_once","text":"url URL online document. filename file name saved locally. many cases parameter necessary, since file name can automatically parsed URL, web addresses obscure . destdir destination directory save file. default, \"data/\" folder, created yet exist.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/download_once.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a file once — download_once","text":"","code":"if (FALSE) { download_once(\"example.com/sample.csv\") }"},{"path":"https://jmclawson.github.io/tmtyro/reference/get_micusp_corpus.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare a corpus of texts from the Michigan Corpus of Upper-level Student Papers. — get_micusp_corpus","title":"Prepare a corpus of texts from the Michigan Corpus of Upper-level Student Papers. — get_micusp_corpus","text":"function accepts filters columns micusp_metadata() downloads parses texts locally copies yet exist. returns table combining metadata text data processing.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/get_micusp_corpus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare a corpus of texts from the Michigan Corpus of Upper-level Student Papers. — get_micusp_corpus","text":"","code":"get_micusp_corpus(...)"},{"path":"https://jmclawson.github.io/tmtyro/reference/get_micusp_corpus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare a corpus of texts from the Michigan Corpus of Upper-level Student Papers. — get_micusp_corpus","text":"... filter rows columns micusp_metadata(). Accepted columns include following: paper_id, title, discipline, paper_type, student_level, sex, nativeness, textual_features.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/get_micusp_corpus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare a corpus of texts from the Michigan Corpus of Upper-level Student Papers. — get_micusp_corpus","text":"data frame 1 row document corpus 9 columns. first 8 columns contain metadata, final column called text contains full text document.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/get_micusp_corpus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare a corpus of texts from the Michigan Corpus of Upper-level Student Papers. — get_micusp_corpus","text":"","code":"if (FALSE) { physics_f <- get_micusp_corpus(discipline == \"Physics\", sex == \"Female\") physics_m <- get_micusp_corpus(discipline == \"Physics\", sex == \"Female\") }"},{"path":"https://jmclawson.github.io/tmtyro/reference/get_micusp_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a table of metadata from the Michigan Corpus of Upper-level Student Papers. — get_micusp_metadata","title":"Retrieve a table of metadata from the Michigan Corpus of Upper-level Student Papers. — get_micusp_metadata","text":"Explore metadata available MICUSP texts choose corpus. first use, function creates folder working directory downloads \"micusp_metadata.csv\" file opening . Subsequent use function load local copy.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/get_micusp_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a table of metadata from the Michigan Corpus of Upper-level Student Papers. — get_micusp_metadata","text":"","code":"get_micusp_metadata(micusp_dir = \"micusp\")"},{"path":"https://jmclawson.github.io/tmtyro/reference/get_micusp_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a table of metadata from the Michigan Corpus of Upper-level Student Papers. — get_micusp_metadata","text":"micusp_dir name directory storing local copies MICUSP materials. Defaults \"micusp/\".","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/get_micusp_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a table of metadata from the Michigan Corpus of Upper-level Student Papers. — get_micusp_metadata","text":"data frame 1 row document corpus 8 columns metadata: paper_id, title, discipline, paper_type, student_level, sex, nativeness, textual_features","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/get_micusp_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a table of metadata from the Michigan Corpus of Upper-level Student Papers. — get_micusp_metadata","text":"","code":"if (FALSE) { get_micusp_metadata() |> View() }"},{"path":"https://jmclawson.github.io/tmtyro/reference/interactive_document_topics.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore topics interactively — interactive_document_topics","title":"Explore topics interactively — interactive_document_topics","text":"interactive_document_topics() uses plotly prepare interactive visualization explore topic model, showing top \"n\" topics document. kind visualization use interactive IDE web page.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/interactive_document_topics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore topics interactively — interactive_document_topics","text":"","code":"interactive_document_topics(   lda,   top_n = 4,   title = FALSE,   height = NULL,   omit = NULL,   smooth = TRUE )"},{"path":"https://jmclawson.github.io/tmtyro/reference/interactive_document_topics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore topics interactively — interactive_document_topics","text":"lda topic model used. top_n number topics visualize. default, top 4 topics document shown. title default, function add title chart, corresponding name object passed lda parameter. Set FALSE return chart title. height height resulting HTML widget. omit Upon exploration, topics may found contain common stop words unhelpful material. Use omit parameter define vector topic numbers wish omit visualization. smooth samples rejoined, measured value topic vary wildly, even samples beside document. can make charts distractingly jittery. default TRUE value parameter reduces chart noise calculating rolling averages across three samples. Set parameter FALSE skip step allow visualization extreme values.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/interactive_document_topics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explore topics interactively — interactive_document_topics","text":"Interactive plotly object","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/interactive_document_topics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explore topics interactively — interactive_document_topics","text":"","code":"if (FALSE) { mysteries <- load_texts(\"mystery-novels\", word = FALSE)  mysteries_lda <- mysteries |>   make_topic_model(k = 10)  interactive_document_topics(mysteries_lda, top_n = 5) }"},{"path":"https://jmclawson.github.io/tmtyro/reference/load_texts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a folder of texts — load_texts","title":"Load a folder of texts — load_texts","text":"load_texts() loads corpus folder texts prepare study using tidytext principles. default, load_texts() add paragraph numbers (suitable prose), unnest word level, options exist change defaults poetry, avoid unnesting, even remove words seem like proper nouns apply techniques natural language processing lemmatizing words tagging parts speech.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/load_texts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a folder of texts — load_texts","text":"","code":"load_texts(   folder = \"data\",   name = \".txt\",   word = TRUE,   lemma = FALSE,   lemma_replace = FALSE,   to_lower = TRUE,   remove_names = FALSE,   pos = FALSE,   poetry = FALSE,   paragraph = TRUE )"},{"path":"https://jmclawson.github.io/tmtyro/reference/load_texts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a folder of texts — load_texts","text":"folder directory containing prose texts. Defaults \"data\". name naming pattern search folder. Defaults \".txt\". word Whether split one word per line. Defaults TRUE. lemma Whether lemmatize text. word TRUE, adds new column called lemma. step can add lot time, defaults FALSE. lemma_replace lemma word TRUE, toggles whether replace word column lemmatized tokens. Defaults FALSE to_lower word TRUE, toggles whether convert words lowercase. Defaults TRUE. remove_names word TRUE, toggles whether remove words appear form initial capitals. Defaults FALSE. pos Whether add column part--speech tag. step can add lot time, defaults FALSE. poetry Whether detect indicate stanza breaks line breaks. Defaults FALSE. paragraph Whether detect paragraph breaks prose. Defaults TRUE.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/load_texts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a folder of texts — load_texts","text":"data frame two five columns one row word (optionally, one row paragraph one row line) corpus.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/load_texts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a folder of texts — load_texts","text":"","code":"if (FALSE) { mysteries <-   load_texts(\"mystery-novels\")  dickinson <-   load_texts(\"dickinson-poems\",              poetry = TRUE)  # `load_texts()` can also be used with # a traditional tidytext workflow: mysteries <-   load_texts(\"mystery-novels\",              word = FALSE,              to_lower = FALSE) |>   tidytext::unnest_tokens(word, text) }"},{"path":"https://jmclawson.github.io/tmtyro/reference/make_topic_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a topic model — make_topic_model","title":"Construct a topic model — make_topic_model","text":"make_topic_model() moves table texts necessary steps preparation building topic model. function applies seven steps: identifies text divisions doc_id column divides texts -sized chunks sample_size words (default 1000 words) unnests text table table one word per row removes stop words proper nouns (identified word appears capitalized first letter) counts word frequencies chunk converts table frequencies document term matrix builds topic model k topics","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/make_topic_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a topic model — make_topic_model","text":"","code":"make_topic_model(df, doc_id = title, sample_size = 1000, k = 15)"},{"path":"https://jmclawson.github.io/tmtyro/reference/make_topic_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a topic model — make_topic_model","text":"df data frame unnested text \"word\" column. doc_id column identifying document. default, \"title\" column used. sample_size sample size document chunk. default, samples include 1000 words. k number topics search . default, 15 topics sought.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/make_topic_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a topic model — make_topic_model","text":"topic model.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/make_topic_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a topic model — make_topic_model","text":"","code":"if (FALSE) { mysteries <- load_texts(\"mystery-novels\", word = FALSE)  mysteries_lda <- mysteries |>   make_topic_model(k = 10)   }"},{"path":"https://jmclawson.github.io/tmtyro/reference/measure_lexical_variety.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure lexical variety — measure_lexical_variety","title":"Measure lexical variety — measure_lexical_variety","text":"measure_lexical_variety() augments tidy text table columns describing lexical variety corpus. Among things, checks uniqueness size vocabulary, additional ratios reporting measurements relation document size.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/measure_lexical_variety.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure lexical variety — measure_lexical_variety","text":"","code":"measure_lexical_variety(df, by = doc_id, word = word)"},{"path":"https://jmclawson.github.io/tmtyro/reference/measure_lexical_variety.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure lexical variety — measure_lexical_variety","text":"df tidy data frame, potentially containing columns called \"doc_id\" \"word\" grouping column word column words containing one word per row","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/measure_lexical_variety.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measure lexical variety — measure_lexical_variety","text":"data frame 7 added columns , first two logical rest numeric: new_word (logical) Indicates whether first instance given word hapax (logical) Indicates whether word incident given word, hapax legomenon vocabulary (integer) Running count words used ttr (double) Type-token ratio, derived running count words divided total number words used htr (double) Hapax-token ratio, derived running count hapax legomena divided total number words used progress_words (integer) Running count total words used far document progress_percent (double) Words used far percentage total number words used document","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/measure_lexical_variety.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure lexical variety — measure_lexical_variety","text":"","code":"austen <- \"austen.rds\" |>   system.file(package = \"tmtyro\") |>   readRDS()  austen |>    measure_lexical_variety() #> # A tibble: 626,324 × 12 #>    doc_id     par_num word     pos   lemma new_word hapax vocabulary   ttr   htr #>    <chr>        <dbl> <chr>    <chr> <chr> <lgl>    <lgl>      <int> <dbl> <dbl> #>  1 lady_susan       1 i        PRP   i     TRUE     FALSE          1 1     0     #>  2 lady_susan       2 lady     NNP   lady  TRUE     FALSE          2 1     0     #>  3 lady_susan       2 susan    NNP   susan TRUE     FALSE          3 1     0     #>  4 lady_susan       2 vernon   NNP   vern… TRUE     FALSE          4 1     0     #>  5 lady_susan       2 to       TO    to    TRUE     FALSE          5 1     0     #>  6 lady_susan       2 mr       NNP   mr    TRUE     FALSE          6 1     0     #>  7 lady_susan       2 vernon   NNP   vern… FALSE    FALSE          6 0.857 0     #>  8 lady_susan       3 langford NNP   lang… TRUE     FALSE          7 0.875 0     #>  9 lady_susan       3 dec      NNP   dec   TRUE     TRUE           8 0.889 0.111 #> 10 lady_susan       4 my       NNP   my    TRUE     FALSE          9 0.9   0.1   #> # ℹ 626,314 more rows #> # ℹ 2 more variables: progress_words <int>, progress_percent <dbl>"},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_doc_word_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a heatmap of ranked features — plot_doc_word_heatmap","title":"Plot a heatmap of ranked features — plot_doc_word_heatmap","text":"Plot heatmap ranked features","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_doc_word_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a heatmap of ranked features — plot_doc_word_heatmap","text":"","code":"plot_doc_word_heatmap(   df,   num = 10,   by = doc_id,   feature = word,   label = TRUE,   na_color = \"white\",   colorset = \"viridis\",   line_color = \"gray\" )"},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_doc_word_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a heatmap of ranked features — plot_doc_word_heatmap","text":"df tidy data frame, potentially containing columns called \"doc_id\" \"word\" num number ranks show, counting ties column used document grouping, doc_id default feature column measure, \"word\" \"lemma\" label Whether show rank label heatmap na_color color show NA values; default \"white\" colorset viridis color palette use; alternatively, two-item vector colors use gradient line_color color grid lines heatmap","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_doc_word_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a heatmap of ranked features — plot_doc_word_heatmap","text":"ggplot object","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_doc_word_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a heatmap of ranked features — plot_doc_word_heatmap","text":"","code":"library(tmtyro) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  austen <- \"austen.rds\" |>   system.file(package = \"tmtyro\") |>   readRDS()  austen |>   filter(pos %in% c(\"NN\", \"NNS\")) |>   plot_doc_word_heatmap()   austen |>   filter(pos %in% c(\"JJ\", \"RB\")) |>   plot_doc_word_heatmap(feature = lemma, colorset = c(\"white\", \"red\"))"},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_document_topics.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot topic distributions — plot_document_topics","title":"Plot topic distributions — plot_document_topics","text":"plot_document_topics() prepares visualization exploring significant topics document time.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_document_topics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot topic distributions — plot_document_topics","text":"","code":"plot_document_topics(   lda,   top_n = 4,   direct_label = TRUE,   title = TRUE,   save = TRUE,   saveas = \"png\",   savedir = \"plots\",   omit = NULL,   smooth = TRUE )"},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_document_topics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot topic distributions — plot_document_topics","text":"lda topic model used. top_n number topics visualize. default, top 4 topics document shown. direct_label default, directly labeles topic numbers chart. Set FALSE show legend corresponding color. title default, function add title chart, corresponding name object passed lda parameter. Set FALSE return chart title. save default, visualization saved. Set FALSE skip saving. saveas filetype saving resulting visualizations. default, files \"png\" format, options \"pdf\" \"jpg also work. savedir directory saving output images. default, set \"plots/\". omit Upon exploration, topics may found contain common stop words unhelpful material. Use omit parameter define vector topic numbers wish omit visualization. smooth samples rejoined, measured value topic vary wildly, even samples beside document. can make charts distractingly jittery. default TRUE value parameter reduces chart noise calculating rolling averages across three samples. Set parameter FALSE skip step allow visualization extreme values.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_document_topics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot topic distributions — plot_document_topics","text":"ggplot2 visualization showing vertical facets texts. length text shown X-axis, area plots Y-axis show distribution strongest topics part text.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_document_topics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot topic distributions — plot_document_topics","text":"","code":"if (FALSE) { mysteries <- load_texts(\"mystery-novels\", word = FALSE)  mysteries_lda <- mysteries |>   make_topic_model(k = 10)  plot_document_topics(mysteries_lda) }"},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_hapax.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize a sample of hapax legomena projected on faceted curves of vocabulary growth over time — plot_hapax","title":"Visualize a sample of hapax legomena projected on faceted curves of vocabulary growth over time — plot_hapax","text":"Visualize sample hapax legomena projected faceted curves vocabulary growth time","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_hapax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize a sample of hapax legomena projected on faceted curves of vocabulary growth over time — plot_hapax","text":"","code":"plot_hapax(   df,   prop = 0.01,   x = progress_words,   y = vocabulary,   by = doc_id,   descriptive_labels = TRUE,   feature = hapax )"},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_hapax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize a sample of hapax legomena projected on faceted curves of vocabulary growth over time — plot_hapax","text":"df tidy data frame, potentially containing columns called \"doc_id\" \"word\" prop proportion hapax sample. chart can become illegible proportions ~1% x progress column show. Default option progress_percent, progress_words also appropriate. y Y-axis variable chart. Default value cumulative vocabulary size. grouping column, doc_id descriptive_labels toggle disabling descriptive labels progress_percent X-axis feature column check new features. Defaults hapax, function might also used new_word instead plot sample new additions documents' vocabularies.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_hapax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize a sample of hapax legomena projected on faceted curves of vocabulary growth over time — plot_hapax","text":"ggplot object","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_hapax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize a sample of hapax legomena projected on faceted curves of vocabulary growth over time — plot_hapax","text":"","code":"austen <- \"austen.rds\" |>   system.file(package = \"tmtyro\") |>   readRDS()  austen_measured <- austen |>   measure_lexical_variety()  austen_measured |>   standardize_titles() |>   plot_hapax()"},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_htr.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize hapax-token ratio over time — plot_htr","title":"Visualize hapax-token ratio over time — plot_htr","text":"Visualize hapax-token ratio time","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_htr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize hapax-token ratio over time — plot_htr","text":"","code":"plot_htr(   df,   x = progress_words,   by = doc_id,   descriptive_labels = TRUE,   labeling = c(\"point\", \"inline\", \"axis\", \"inset\"),   log_y = TRUE )"},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_htr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize hapax-token ratio over time — plot_htr","text":"df tidy data frame, potentially containing column called \"doc_id\" \"word\" x progress column show. Default option progress_percent, progress_words also appropriate. grouping column doc_id, default. descriptive_labels toggle disabling descriptive labels progress_percent X-axis labeling Options labeling groups: \"point\" labels final value \"inline\" prints label within smoothed curve \"axis\" prints labels secondary Y-axis might go \"inset\" prints legend within plot area Anything else prints legend right plot area. log_y toggle logarithmic scaling Y-axis; defaults TRUE","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_htr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize hapax-token ratio over time — plot_htr","text":"ggplot object","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_htr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize hapax-token ratio over time — plot_htr","text":"","code":"austen <- \"austen.rds\" |>   system.file(package = \"tmtyro\") |>   readRDS()  austen_measured <- austen |>   measure_lexical_variety()  austen_measured |>   standardize_titles() |>   plot_htr()"},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_topic_wordcloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot topic wordclouds — plot_topic_wordcloud","title":"Plot topic wordclouds — plot_topic_wordcloud","text":"plot_topic_wordcloud() prepares, saves, displays word clouds topics topic model. function can display word clouds one specific topics, can show word clouds every topic.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_topic_wordcloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot topic wordclouds — plot_topic_wordcloud","text":"","code":"plot_topic_wordcloud(df, topics = NULL, crop = TRUE, savedir = \"plots\")"},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_topic_wordcloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot topic wordclouds — plot_topic_wordcloud","text":"df loaded topic model topics Topic numbers visualized. left undefined, topics visualized crop Whether remove white space visualized word clouds savedir directory save plots . Defaults \"plots\"","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_topic_wordcloud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot topic wordclouds — plot_topic_wordcloud","text":"Graphic(s) prepared knitr Quarto RMarkdown","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_topic_wordcloud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot topic wordclouds — plot_topic_wordcloud","text":"","code":"if (FALSE) { mysteries <- load_texts(\"mystery-novels\", word = FALSE)  mysteries_lda <- mysteries |>   make_topic_model(k = 10)   }"},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_ttr.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize type-token ratio over time — plot_ttr","title":"Visualize type-token ratio over time — plot_ttr","text":"Visualize type-token ratio time","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_ttr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize type-token ratio over time — plot_ttr","text":"","code":"plot_ttr(   df,   x = progress_words,   by = doc_id,   descriptive_labels = TRUE,   labeling = c(\"point\", \"inline\", \"axis\", \"inset\"),   log_y = TRUE )"},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_ttr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize type-token ratio over time — plot_ttr","text":"df tidy data frame, potentially containing column called \"doc_id\" \"word\" x progress column show. Default option progress_percent, progress_words also appropriate. grouping column doc_id, default. descriptive_labels toggle disabling descriptive labels progress_percent X-axis labeling Options labeling groups: \"point\" labels final value \"inline\" prints label within smoothed curve \"axis\" prints labels secondary Y-axis might go \"inset\" prints legend within plot area Anything else prints legend right plot area. log_y toggle logarithmic scaling Y-axis; defaults TRUE","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_ttr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize type-token ratio over time — plot_ttr","text":"ggplot object","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_ttr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize type-token ratio over time — plot_ttr","text":"","code":"austen <- \"austen.rds\" |>   system.file(package = \"tmtyro\") |>   readRDS()  austen_measured <- austen |>   measure_lexical_variety()  austen_measured |>   standardize_titles() |>   plot_ttr(labeling = \"inline\") #> `geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")'   austen_measured |>   standardize_titles() |>   plot_ttr()"},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_vocabulary.html","id":null,"dir":"Reference","previous_headings":"","what":"Show vocabulary growth — plot_vocabulary","title":"Show vocabulary growth — plot_vocabulary","text":"plot_vocabulary() visualizes vocabulary growth new words used document.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_vocabulary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show vocabulary growth — plot_vocabulary","text":"","code":"plot_vocabulary(   df,   x = progress_words,   by = doc_id,   descriptive_labels = TRUE,   labeling = c(\"point\", \"inset\", \"inline\", \"axis\") )"},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_vocabulary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show vocabulary growth — plot_vocabulary","text":"df tidy data frame, potentially containing columns called \"doc_id\" \"word\" x column showing cumulative count words grouping column descriptive_labels toggle disabling descriptive labels progress_percent X-axis labeling Options labeling groups: \"point\" labels final value \"inline\" prints label within smoothed curve \"axis\" prints labels secondary Y-axis might go \"inset\" prints legend within plot area Anything else prints legend right plot area.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_vocabulary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show vocabulary growth — plot_vocabulary","text":"ggplot object","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/plot_vocabulary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show vocabulary growth — plot_vocabulary","text":"","code":"austen <- \"austen.rds\" |>   system.file(package = \"tmtyro\") |>   readRDS()  austen_measured <- austen |>   measure_lexical_variety()  austen_measured |>   standardize_titles() |>   plot_vocabulary(progress_percent)   austen_measured |>   standardize_titles() |>   plot_vocabulary()"},{"path":"https://jmclawson.github.io/tmtyro/reference/standardize_titles.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize document titles — standardize_titles","title":"Standardize document titles — standardize_titles","text":"Useful especially visualizations. standardize_titles applies English-language conventions, including converting underscores spaces, capitalizing important words, removing leading articles, dropping subtitles.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/standardize_titles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize document titles — standardize_titles","text":"","code":"standardize_titles(.data, title = doc_id)"},{"path":"https://jmclawson.github.io/tmtyro/reference/standardize_titles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize document titles — standardize_titles","text":".data tidy data frame, potentially containing title column called \"doc_id\". Alternatively, simple character vector titles. title column containing titles standardized","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/standardize_titles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize document titles — standardize_titles","text":"data frame one column adjusted. .data character vector instead data frame, character vector returned.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/standardize_titles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize document titles — standardize_titles","text":"","code":"austen <- \"austen.rds\" |>   system.file(package = \"tmtyro\") |>   readRDS()  austen_measured <- austen |>   measure_lexical_variety()  # Without standardized titles austen_measured |>   plot_vocabulary(labeling = \"inline\") #> `geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")'   # With standardized titles austen_measured |>   standardize_titles() |>   plot_vocabulary(labeling = \"inline\") #> `geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")'"},{"path":"https://jmclawson.github.io/tmtyro/reference/tmtyro-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tmtyro: tmtyro: Simplified Workflows for Text Mining Tyros — tmtyro-package","title":"tmtyro: tmtyro: Simplified Workflows for Text Mining Tyros — tmtyro-package","text":"Work analyze text simple complex features. Adopting tidytext principles, tmtyro abstracts processes levels allow beginners use familiarize techniques needing understand much code.","code":""},{"path":[]},{"path":"https://jmclawson.github.io/tmtyro/reference/tmtyro-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tmtyro: tmtyro: Simplified Workflows for Text Mining Tyros — tmtyro-package","text":"Maintainer: James Clawson clawson@gmail.com (ORCID)","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/unnest_without_caps.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a column into tokens without names — unnest_without_caps","title":"Split a column into tokens without names — unnest_without_caps","text":"Split column tokens, flattening table one-token-per-row omitting token present capitalized form.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/unnest_without_caps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a column into tokens without names — unnest_without_caps","text":"","code":"unnest_without_caps(df, output = \"word\", input = \"text\", to_lower = TRUE)"},{"path":"https://jmclawson.github.io/tmtyro/reference/unnest_without_caps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a column into tokens without names — unnest_without_caps","text":"df data frame output Output column created. input Input column gets split word. to_lower Whether convert final words lowercase.","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/unnest_without_caps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a column into tokens without names — unnest_without_caps","text":"data frame","code":""},{"path":"https://jmclawson.github.io/tmtyro/reference/unnest_without_caps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a column into tokens without names — unnest_without_caps","text":"","code":"if (FALSE) { mysteries <-   load_texts(\"mystery-novels\",              to_lower = FALSE) |>   unnest_without_caps()  # Since `unnest_without_caps()` is # incorporated into `load_texts()`, # it may be unnecessary for many # scenarios. mysteries <-   load_texts(\"mystery-novels\",              remove_names = TRUE)   }"}]
